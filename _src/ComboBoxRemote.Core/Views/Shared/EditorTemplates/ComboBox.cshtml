@using Zoka.ComboBoxRemote
@model object
@inject IServiceProvider ServiceProvider
@{
	var param1 = ViewData.ModelMetadata.AdditionalValues["Param1"];
	var provider_type = ViewData.ModelMetadata.AdditionalValues["DataProviderType"] as Type;
	var is_remote = ViewData.ModelMetadata.AdditionalValues.ContainsKey("IsRemote") && (bool)ViewData.ModelMetadata.AdditionalValues["IsRemote"];
	IEnumerable<SelectListItem> data = Enumerable.Empty<SelectListItem>();
	if (!is_remote)
	{
		var data_provider = ServiceProvider.GetService(provider_type) as IComboBoxDataProvider;
		if (data_provider == null)
		{
			throw new Exception($"Could not get the DataProvider of {(ViewData.ModelMetadata.AdditionalValues["DataProviderType"] as Type)?.FullName ?? "Unknown"} type. Make sure is is registered in ServiceProvider");
		}
		try
		{
			data = await data_provider.GetComboBoxItemsAsync(User, param1);
		}
		catch (Exception ex)
		{
			throw new AggregateException($"Error getting data from data provider of {data_provider.GetType().FullName} type. Error is described in the inner exception.", ex);
		}
	}

	Dictionary<string, object> html_params = new Dictionary<string, object>();
	if (!is_remote)
	{
		html_params.Add("class", "form-control ComboBox");
	}
	else
	{
		html_params.Add("class", "form-control ComboBoxRemote");
		html_params.Add("data-provider-type", provider_type.AssemblyQualifiedName);
		html_params.Add("data-param1", param1.ToString());
	}
}

@Html.DropDownList(null, data, html_params)